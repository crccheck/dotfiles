#!/bin/sh

###################################################
### Functions
###################################################

# append_path() and prepend_path() adapted from Fink's init.sh

# add to end of path
append_path()
{
    if eval test -z "\$$1"
    then
        eval "export $1=$2"
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
        eval "export $1=\$$1:$2"
    fi
}

# add to beginning of path
prepend_path()
{
    if eval test -z "\$$1"
    then
      eval "export $1=$2"
      return
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
      eval "export $1=$2:\$$1"
    fi
}

prepend_path_if_exists()
{
    if [ -d "$2" ]
    then
        prepend_path $1 $2
    fi
}

###################################################
### PATH-type list variables
###################################################

prepend_path_if_exists PATH $HOME/usr/bin
prepend_path_if_exists PATH $HOME/bin

for i in $HOME/opt/*/bin
do
    prepend_path_if_exists PATH $i
done
prepend_path_if_exists PATH "$HOME/opt/android-sdk-linux_x86-1.5_r1/tools"

# Note to self: as of Python 2.6, there is now support for local
# site-packages in ~/.local/. See PEP-370.
# Better yet, just use virtualenv.
#append_path PYTHONPATH $HOME/.python

append_path LD_LIBRARY_PATH $HOME/lib:$HOME/usr/lib

###################################################
### Simple variables
###################################################

if [ -z "$HOST" ]
then
    HOST=$(hostname | sed 's/\..*//')
fi

export EDITOR=vim
export VISUAL=subl

export LC_COLLATE="POSIX"

if [ "$TERM" == "xterm" ]
then
    export TERM="xterm-color"
fi

# Change the window title of X terminals
case $TERM in
    xterm*|rxvt|Eterm|eterm)
        PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
        ;;
    screen)
        PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
        ;;
esac

# Fabric cheat
function f {
    if [ -z $1 ]; then
        fab -l
    else
        fab $@
    fi
}


function tth {
    ssh root@$1 -i ~/scripts/id_ttdev
}

# Node.js
export NODE_PATH=$HOME/local/node
prepend_path_if_exists PATH $HOME/local/node/bin


###################################################
### Aliases
###################################################

alias l='ls -la'
alias sl='sl -e'
# alias vi='vim -g'


# to install ack-grep as ack instead of ack-grep:
# sudo dpkg-divert --local --divert /usr/bin/ack --rename --add /usr/bin/ack-grep
#todo alias rm to move shit to /tmp
alias mv='mv -iv'
alias cp='cp -iv'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias col50="printf '=%.0s' {1..50}"  # 50 column ruler
alias col72="printf '=%.0s' {1..72}"  # 72 column ruler
alias col80="printf '=%.0s' {1..80}"  # 80 column ruler

export GREP_OPTIONS='--color=auto'
alias grep='grep -I'
alias fgrep='fgrep -I'
alias egrep='egrep -I'
alias rgrep='rgrep -I'

alias grepenv='env | grep'

alias netstat='netstat -natp'
alias du='du -kh --max-depth=1'
alias df='df -kTh'

alias wget='wget --no-check-certificate'
sssh () { ssh -t $@ "screen -rx -S crc"; }


my_port=8000
alias dj='echo -en "\033]0;dj :$my_port\a"; django runserver 0.0.0.0:$my_port'
alias djp='django runserver_plus 0.0.0.0:$my_port'
#alias djl='python manage.py runserver 0.0.0.0:$my_port --settings=local-settings'
#alias djpl='python manage.py runserver_plus 0.0.0.0:$my_port --settings=local-settings'
alias djs="django shell"
alias djsp="django shell_plus"
alias djsql="django debugsqlshell"

alias attach="$HOME/bin/grabssh ; screen -d -r"
alias fixssh="source $HOME/bin/fixssh"
alias ipchicken="curl -s http://checkip.dyndns.org | sed 's/[a-zA-Z/<> :]//g'"
alias fb="fab -f ~/scripts/fabfile.py"
alias befs="bundle exec foreman start"

md () { mkdir -p "$@" && cd "$@"; }

###################################################
### Platform- or system-specific modifications
###################################################

if [ "$(uname -s)" == "Darwin" ]; then
    # Mac OS X stuff:
    alias ls='ls -AFGq'
    prepend_path_if_exists PATH /usr/local/share/python
    prepend_path_if_exists PATH /usr/local/bin
    append_path PYTHONPATH ~/Library/Python
    # Fix Backspace/Delete confusion:
    stty erase ^?
    # XTerm's $MANPATH gets messed up, and I can't find where it's happening.
    # Screw it. Just reset the whole thing, cuz the default works.
    unset MANPATH

    # xcode 4 hack, to get pycrypto to install
    export ARCHFLAGS='-arch i386 -arch x86_64'

    source $HOME/.dotfiles/git-completion.bash

    export EDITOR=vim
    export VISUAL=subl
else
    alias ls='ls -F --color=auto'
fi

if [ "$(uname -s)" == "MINGW32_NT-6.1" ]; then
    # Windows stuff:
    alias subl='/c/Program\ Files/Sublime\ Text\ 2/sublime_text.exe'
    export GREP_OPTIONS=''
    export PATH=$PATH:/c/Python27
    export PATH=$PATH:/c/Python27/Scripts
fi

###################################################
### PYTHON, virtualenv(wrapper)
###################################################
export VIRTUALENV_DISTRIBUTE=true
export VIRTUAL_ENV_DISABLE_PROMPT="True"
export WORKON_HOME=$HOME/env
if [ ! -d $WORKON_HOME ]; then
    mkdir -p $WORKON_HOME
fi
export PROJECT_HOME=$HOME/projects
if [ ! -d $PROJECT_HOME ]; then
    mkdir -p $PROJECT_HOME
fi
[ -f /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh
export PIP_DOWNLOAD_CACHE="$HOME/.pip"
export PIP_VIRTUALENV_BASE=$WORKON_HOME

# helper for generating codeintel config files
function mkcodeintelconfig {
    # TODO make sure you're in a virtualenv
    mkdir -p .codeintel
    eval "echo \"$(cat ~/.dotfiles/codeintel)\"" > .codeintel/config
}

#UNCOLOR="\[\033[00m\]"
#COLOR="\[\033[1;36m\]"

###################################################
### RVM
###################################################
# This loads RVM into a shell session
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"


###################################################
### Ruby Gems
###################################################

if [ -d /var/lib/gems ]; then
    export GEM_HOME=$HOME/.gem/ruby/1.8
    prepend_path PATH $GEM_HOME/bin
    append_path PATH /var/lib/gems/bin
fi

###################################################
### git prompt hack
###################################################
# http://henrik.nyh.se/2008/12/git-dirty-prompt
# http://www.simplisticcomplexity.com/2008/03/13/show-your-git-branch-name-in-your-prompt/
#   username@Machine ~/dev/dir[master]$   # clean working directory
#   username@Machine ~/dev/dir[master*]$  # dirty working directory

function parse_git_dirty {
    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ (Git branch: \1$(parse_git_dirty))/"
}
function active_virtualenv {
    if [ -n "$VIRTUAL_ENV" ]
    then
        #echo -n " (Virtualenv: $COLOR\$(basename "$VIRTUAL_ENV")$UNCOLOR)"
        echo -n " (Virtualenv: $(basename "$VIRTUAL_ENV"))"
    fi
}

# Stolen from Gentoo:
PS1="\n\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[00m\]\$(active_virtualenv)\$(parse_git_branch)\n\$ "
#LIGHT_GREEN="\[\033[1;32m\]"
#PS1="$LIGHT_GREEN\u@\h\[\033[01;34m\] \w$UNCOLOR$(active_virtualenv)$(parse_git_branch)\n\$ "
# Save custom PS1 to restore later
#export CCG_PS1="$PS1"
export PS1

function _pingbaby {
    # TODO scale=5
    # TODO delay=10
    local out=$(ping -q -c 1 $1)
    local time=$(echo $out | awk -F/ 'END{print $5}')
    if [ $time ]; then
        local ticks=$(echo $time / 5 | bc)
        for i in $(seq $ticks); do echo -n 'â–„'; done
        echo " $time"
    else
        echo " *  p i n g   t i m e o u t  *"
    fi
    sleep 10
    _pingbaby $1
}

function pingbaby {
    local host='www.google.com'
    echo Pinging $host
    _pingbaby $host
}

# mktmpenv doesn't work too well for me
function tmpenv {
    deactivate
    rmvirtualenv tmp
    mkvirtualenv tmp --no-site-packages
    workon tmp
    pip freeze
}

# latest can be downloaded: http://standards.ieee.org/develop/regauth/oui/oui.txt
function mac {
    OUI=$HOME/.dotfiles/resources/oui.txt
    if [ -z $1 ]; then
        echo "Missing Parameter XX:XX:XX or xxxxxx"
    else
        grep -i $1 $OUI
    fi
}

# MAC manipulators
# https://gist.github.com/jashkenas/5113149
alias random_mac='sudo ifconfig en0 ether `openssl rand -hex 6 | sed "s/\(..\)/\1:/g; s/.$//"`'
alias restore_mac='sudo ifconfig en0 ether YOUR_ORIGINAL_MAC_ADDRESS_GOES_HERE'
