#!/bin/sh

###################################################
### Functions
###################################################

# append_path() and prepend_path() adapted from Fink's init.sh

# add to end of path
append_path()
{
    if eval test -z "\$$1"
    then
        eval "export $1=$2"
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
        eval "export $1=\$$1:$2"
    fi
}

# add to beginning of path
prepend_path()
{
    if eval test -z "\$$1"
    then
      eval "export $1=$2"
      return
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
      eval "export $1=$2:\$$1"
    fi
}

prepend_path_if_exists()

{
    if [ -d "$2" ]
    then
        prepend_path $1 $2
    fi
}

###################################################
### PATH-type list variables
###################################################

#prepend_path_if_exists PATH $HOME/anaconda3/bin
prepend_path_if_exists PATH $HOME/usr/bin
prepend_path_if_exists PATH $HOME/bin

for i in $HOME/opt/*/bin
do
    prepend_path_if_exists PATH $i
done
prepend_path_if_exists PATH "$HOME/opt/android-sdk-linux_x86-1.5_r1/tools"

# Note to self: as of Python 2.6, there is now support for local
# site-packages in ~/.local/. See PEP-370.
# Better yet, just use virtualenv.
#append_path PYTHONPATH $HOME/.python

append_path LD_LIBRARY_PATH $HOME/lib:$HOME/usr/lib

###################################################
### Simple variables
###################################################

if [ -z "$HOST" ]
then
    HOST=$(hostname | sed 's/\..*//')
fi

export EDITOR=vim
export VISUAL=vim
# XXX whatever my default visual editor happens to be, could be atom or subl too
alias vi=${VISUAL}
export FPP_EDITOR="atom --wait"
export HISTCONTROL=ignoredups:erasedups
# append history (defaults to append anyways)
shopt -s histappend

export LC_COLLATE="POSIX"
export DOCKER_NAMESPACE=crccheck  # my docker username
export PIP_DISABLE_PIP_VERSION_CHECK=1

if [ "$TERM" == "xterm" ]
then
    export TERM="xterm-color"
fi

# Change the window title of X terminals
case $TERM in
    # xterm*|rxvt|Eterm|eterm)
    #     PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
    #     ;;
    screen)
        PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
        ;;
esac

# After each command, save and reload history
# nevermind, this is too confusing
# export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# quick way for me to change my titles
function tit {
    local title=${@-$(basename $PWD)}
    echo -e "\033];$title\007"
}


# Fabric cheat
function f {
    if [ -z $1 ]; then
        fab -l
    else
        fab $@
    fi
}

# Invoke cheat
function inv {
  # if no parameters, then assume we want to list tasks
  if [ -z $1 ]; then
    invoke --list
  else
    # invoke expects --help to be first, so move it if it isn't
    local numargs=$#
    for ((i=2; i <= numargs ; i++))
    do
      if [ ${@:$i:1} == "--help" ]; then
        set -- "--help" ${@:1:$i - 1} ${@:$i + 1}
      fi
    done
    invoke $@
  fi
}

# Open a Wireshark window to a Docker container
# Usage: dshark <container>
function dshark {
  docker run --rm --net=container:$1 crccheck/tcpdump -i any tcp --immediate-mode -w - | wireshark -k -i -
}

# Node.js
export NODE_PATH=$HOME/local/node
prepend_path_if_exists PATH $HOME/local/node/bin
prepend_path_if_exists NODE_PATH $HOME/usr/lib/node_modules

[ -f ~/.bash_aliases ] && source ~/.bash_aliases

# to install ack-grep as ack instead of ack-grep:
# sudo dpkg-divert --local --divert /usr/bin/ack --rename --add /usr/bin/ack-grep
#todo alias rm to move shit to /tmp
alias mv='mv -iv'
alias cp='cp -iv'

alias lol="lolcommits --enable --delay=1 --fork"
alias loll="lolcommits --last"

sssh () { ssh -t $@ "screen -rx -S crc"; }


PORT=8000
alias dj='echo -en "\033]0;dj :$PORT\a"; django runserver 0.0.0.0:$PORT'
alias djp='django runserver_plus 0.0.0.0:$PORT'
alias djs="django shell"
alias djsp="django shell_plus"
alias djsql="django debugsqlshell"
alias djadminme='django createsuperuser --username=admin --email=admin@example.com || django createsuperuser --email=admin@example.com'
alias ipynb='ipython notebook'
alias ipynbinstall='pip install ipython[notebook]'

alias attach="$HOME/bin/grabssh ; screen -d -r"
alias fixssh="source $HOME/bin/fixssh"
alias befs="bundle exec foreman start"
alias dsdamn="find . -name '.DS_Store' -delete"

alias wow='git status'
alias such=git
alias very=git

alias xoff='xset dpms force off'

function work {
  # assumes `mkvirtualenv` exists
  local env_name=$(basename $PWD)
  workon $env_name
  if [ $? -ne 0 ]; then
    echo "Shall I create '${env_name}' for you? [Yn]"
    read -n 1 sure
    if [ -z "$sure" ] || [ "$sure" = 'y' ] || [ "$sure" = 'Y' ]; then
      mkvirtualenv $env_name
      setvirtualenvproject
    fi
  fi
}


# Grunt js shell tab auto-completion
# http://gruntjs.com/frequently-asked-questions#how-do-i-enable-shell-tab-auto-completion
[ -f /usr/local/bin/grunt ] && eval "$(grunt --completion=bash)"


###################################################
### Platform- or system-specific modifications
###################################################

if [ "$(uname -s)" == "Darwin" ]; then
  # Mac OS X stuff:
  alias ls='ls -AFGq'
  alias sed=gsed
  alias du='du -kh'
  prepend_path_if_exists PATH /usr/local/bin

  # http://postgresapp.com/documentation/cli-tools.html
  prepend_path_if_exists PATH '/Applications/Postgres.app/Contents/Versions/latest/bin'

  alias dbstart='mysql.server start && pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
  # Fix Backspace/Delete confusion:
  stty erase ^?
  # XTerm's $MANPATH gets messed up, and I can't find where it's happening.
  # Screw it. Just reset the whole thing, cuz the default works.
  unset MANPATH

  # xcode 4 hack, to get pycrypto to install
  export ARCHFLAGS='-arch i386 -arch x86_64'

  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
  [ -f $HOME/Sync/dotfiles/git-completion.bash ] && source $HOME/Sync/dotfiles/git-completion.bash

  if which -s docker-machine; then
    eval "$(docker-machine env default)"
  fi
else
  # aliases that don't work in OSX
  alias df='df -kTh'
  alias du='du -kh --max-depth=1'
  alias ls='ls -F --color=auto'
  alias netstat='netstat -natp'

  # SSH Agent and keychain
  if [ -f /usr/bin/keychain ] && [ ! -f /tmp/keychain ]; then
    ssh-add ~/.ssh/*.pem
    # /usr/bin/keychain $HOME/.ssh/*.pem
    # source $HOME/.keychain/$HOSTNAME-sh
    touch /tmp/keychain
  fi
fi

if [ "$(uname -s)" == "MINGW32_NT-6.1" ]; then
    # Windows stuff:
    alias subl='/c/Program\ Files/Sublime\ Text\ 2/sublime_text.exe'
    export PATH=$PATH:/c/Python27
    export PATH=$PATH:/c/Python27/Scripts
fi

###################################################
### PYTHON, virtualenv(wrapper)
###################################################
export VIRTUAL_ENV_DISABLE_PROMPT="True"
export WORKON_HOME=$HOME/env
if [ ! -d $WORKON_HOME ]; then
    mkdir -p $WORKON_HOME
fi
export PROJECT_HOME=$HOME/projects
if [ ! -d $PROJECT_HOME ]; then
    mkdir -p $PROJECT_HOME
fi
[ -f /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh
export PIP_VIRTUALENV_BASE=$WORKON_HOME

# Workaround for Conda removing /usr/bin from my path
export CONDA_DEFAULT_ENV=dummy

# rbenv
#######
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

###################################################
### Ruby Gems
###################################################

if [ -d /var/lib/gems ]; then
    # export GEM_HOME=$HOME/.gem/ruby/1.8
    prepend_path PATH $GEM_HOME/bin
    append_path PATH /var/lib/gems/bin
fi

if [ -d /usr/local/heroku/bin ]; then
    prepend_path PATH /usr/local/heroku/bin
fi

GREEN="\[\033[1;32m\]"
BLUE="\[\033[1;34m\]"
CYAN="\[\033[1;36m\]"
UNCOLOR="\[\033[00m\]"

eCYAN="\x1b[1;36m"
eUNCOLOR="\x1b[0m"

###################################################
### git prompt hack
###################################################
# http://henrik.nyh.se/2008/12/git-dirty-prompt
# http://www.simplisticcomplexity.com/2008/03/13/show-your-git-branch-name-in-your-prompt/
#   username@Machine ~/dev/dir[master]$   # clean working directory
#   username@Machine ~/dev/dir[master*]$  # dirty working directory
#
# https://raw.github.com/git/git/master/contrib/completion/git-prompt.sh
function parse_git_dirty {
    # 0    clean
    # 1    dirty
    # 129  not in git
    git diff --no-ext-diff --quiet --exit-code 2> /dev/null
    [[ $? -eq 1 ]] && echo "*"
}

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ (Git branch: \1$(parse_git_dirty))/"
}
function active_virtualenv {
    if [ -n "$VIRTUAL_ENV" ]
    then
        echo -en " (Virtualenv: $eCYAN$(basename "$VIRTUAL_ENV")$eUNCOLOR)"
        # echo -n " (Virtualenv: $(basename "$VIRTUAL_ENV"))"
    fi
}

# PS1="\n\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[00m\]\$(active_virtualenv)\$(parse_git_branch)\n\$ "
PS1="\n$GREEN\u@\h$BLUE \w$UNCOLOR\$(active_virtualenv)\$(parse_git_branch)\n\$ "
export PS1


# latest can be downloaded: http://standards.ieee.org/develop/regauth/oui/oui.txt
function mac {
    OUI=$HOME/.dotfiles/resources/oui.txt
    if [ -z $1 ]; then
        echo "Missing Parameter XX:XX:XX or xxxxxx"
    else
        grep -i $1 $OUI
    fi
}

# MAC manipulators
# https://gist.github.com/jashkenas/5113149
alias random_mac='sudo ifconfig en0 ether `openssl rand -hex 6 | sed "s/\(..\)/\1:/g; s/.$//"`'
alias restore_mac='sudo ifconfig en0 ether YOUR_ORIGINAL_MAC_ADDRESS_GOES_HERE'

# Autoenv
[ -f ~/.autoenv/activate.sh ] && source ~/.autoenv/activate.sh || \
[ -f ~/Sync/autoenv/activate.sh ] && source ~/Sync/autoenv/activate.sh
