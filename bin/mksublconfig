#!/usr/bin/env bash
#
# Usage:
#
# From the root of your virtualenv:
# $ mksublconfig
#
# Run it again to open the project:
# $ mksublconfig
# Project already exists: ... Open ... ? [Yn]
#
# Helper for generating a sublime text project for the current Python project.

# HACK substitute for virtualenvwrapper_get_site_packages_dir to get around
# "command not found"
site_packages=$("$VIRTUAL_ENV/bin/python" -c "import distutils; print(distutils.sysconfig.get_python_lib())")

CONFIG=$(cat << EOF
{
    "folders":
    [
        {
            "path": "$PWD"
        }
    ],
    "settings": {
        "python_interpreter_path": "$(which python)",
        "python_package_paths": [
            "$site_packages"
        ]
    }
}
EOF
)
echo "${CONFIG}"

# the name of the project file
PROJECT="$(basename $PWD).sublime-project"

if [ -f ~/Documents/$PROJECT ]; then
  echo "Project already exists: $PROJECT Open $PROJECT ? [Yn]"
  read -n 1 sure
  if [ -z "$sure" ] || [ "$sure" = 'y' ] || [ "$sure" = 'Y' ]; then
    subl ~/Documents/${PROJECT}
  fi
else
  echo "Create $PROJECT ? [Yn]"
  read -n 1 sure
  if [ -z "$sure" ] || [ "$sure" = 'y' ] || [ "$sure" = 'Y' ]; then
    echo "${CONFIG}" > ~/Documents/${PROJECT}
  fi
fi
