# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'body':
  'ctrl-shift-pageup': 'pane:move-item-left'
  'ctrl-shift-pagedown': 'pane:move-item-right'
  # WARNING these don't work for the last line https://github.com/atom/atom/issues/7653
  'ctrl-down': 'editor:move-line-down'
  'ctrl-up': 'editor:move-line-up'

  'alt-q': 'autoflow:reflow-selection'
  'cmd-q': 'autoflow:reflow-selection'

'atom-text-editor':
  'ctrl-f2': 'bookmarks:toggle-bookmark'

'atom-text-editor[data-grammar="source python"]:not(.mini)':
  'ctrl-shift-g': 'autocomplete-python:go-to-definition'

# vim-mode overrides
'atom-text-editor.vim-mode':
  'ctrl-c': 'core:copy'
  'ctrl-v': 'core:paste'
'atom-text-editor.vim-mode:not(.insert-mode)':
  'ctrl-d': 'find-and-replace:select-next'
'atom-text-editor.vim-mode.normal-mode':
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  'ctrl-v': 'core:paste'

'.platform-darwin body':
  # Disable non-vim movement
  'cmd-up': ''
  'cmd-down': ''
'.platform-darwin atom-text-editor':
  'cmd-q': 'autoflow:reflow-selection'
